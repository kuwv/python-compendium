---
name: CI Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ github.event.pull_request.head.sha }}"
          fetch-depth: 0
      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Setup gitconfig
        run: |
          git config user.name 'autonomous-bot'
          git config user.email 'an.autonomous.bot@gmail.com'
      - name: Install dependencies
        run: |
          whoami
          pwd
          pip install --upgrade pip
          pip install .
      - name: Bump version
        run: |
          version info
          if [ "${GITHUB_REF##*/}" == "main" ]; then
            version bump --commit --tag
            version push --password "${{ secrets.GITHUB_TOKEN }}"
          else
            version bump
          fi
          version info --filepaths | tar -cvzf versioning.tar.gz -T -
      - name: Store versioned files
        uses: actions/upload-artifact@v3
        with:
          name: "versioning-${{ github.run_number }}"
          path: versioning.tar.gz
      # - name: Cache version changes
      #   id: versioned-files
      #   uses: actions/cache@v3
      #   with:
      #     key: ${{ runner.os }}-versioning-${{ hashFiles('versioning.tar.gz') }}
      #     path: versioning.tar.gz
  #   outputs:
  #     version: "${{ steps.version.info }}"
  sca:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
      - name: Lint
        run: |
          workflow-tools style.sort-headers.run --check
          workflow-tools style.format.run --check
          workflow-tools sca.lint.run
      - name: Type checking
        run: workflow-tools sca.type-checking.run
      # - name: Perform security checks
      #   run: |
      #     workflow-tools sec.sast.run
      #     workflow-tools sec.dependency-scan.run
  build:
    runs-on: ubuntu-latest
    needs: [version, sca]
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install --upgrade pip build
          pip install .
      - name: Download versioned files
        uses: actions/download-artifact@v3
        with:
          name: "versioning-${{ github.run_number }}"
      - name: Perform build
        run: |
          tar -xzf versioning.tar.gz
          workflow-tools dist.package.build
      - name: Store versioned files
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - name: Download versioned files
        uses: actions/download-artifact@v3
        with:
          name: "versioning-${{ github.run_number }}"
      - name: Install dependencies
        run: tar -xzf versioning.tar.gz
      - name: Download versioned files
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install ./dist/proman_versioning*whl
      - name: Perform tests
        run: workflow-tools qa.unit-test.run
  publish:
    runs-on: ubuntu-latest
    needs: ['build', 'test']
    steps:
      - uses: actions/checkout@v3
      - name: Download versioned files
        uses: actions/download-artifact@v3
        with:
          name: "versioning-${{ github.run_number }}"
      - name: Install dependencies
        run: tar -xzf versioning.tar.gz
      - name: Download versioned files
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
      - name: Perform publish
        run: |
          # NOTE: publish to test.pypi if dev
          poetry config repositories.test-pypi 'https://test.pypi.org/legacy/'
          poetry config pypi-token.test-pypi "${{ secrets.TESTPYPI_TOKEN }}"
          workflow-tools dist.package.publish --repository test-pypi
