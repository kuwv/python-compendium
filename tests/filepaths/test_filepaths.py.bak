# typing: ignore
import os

from compendium.filepaths import ConfigPaths


def test_singleton(fs):
    # Setup Singleton path
    fs.create_file('/opt/test/config.toml')

    # Test Singleton
    cfg = ConfigPaths(name='test')
    cfg.load_configs('/opt/test/config.toml')
    print(cfg.filepaths)

    assert '/opt/test/config.toml' in cfg.filepaths


def test_hierarchy(fs):
    # Setup base paths
    global_path = os.path.expanduser('~')
    base_path = os.path.basename(__file__)

    # System path
    fs.create_file(os.path.join('etc', 'test', 'config.toml'))

    # User path
    fs.create_file(os.path.join(global_path, '.test.toml'))
    fs.create_file(os.path.join(global_path, '.test.d', 'config.toml'))

    # Current path
    fs.create_file(os.path.join(base_path, 'config.toml'))
    fs.create_file(os.path.join(base_path, 'test.toml'))

    # Test hierarchy
    cfg = ConfigPaths(
        name='test',
        load_strategy='hierarchy',
        enable_system_paths=True,
        enable_global_paths=True
    )
    cfg.load_configs()

    assert '/etc/test/config.toml' in cfg.filepaths
    assert os.path.join(global_path, '.test.toml') in cfg.filepaths
    assert os.path.join(global_path, '.test.d', 'config.toml') in cfg.filepaths


def test_tree(fs):
    # Setup base paths
    base_path = os.path.dirname(__file__)

    # Current path
    fs.create_file(os.path.join(base_path, 'config.toml'))
    fs.create_file(os.path.join(base_path, 'example1', 'config.toml'))
    fs.create_file(os.path.join(base_path, 'example2', 'config.toml'))

    # Test tree
    cfg = ConfigPaths(name='test', load_strategy='tree')
    cfg.load_configs()

    assert os.path.join(base_path, 'config.toml') in cfg.filepaths
    assert os.path.join(base_path, 'example1', 'config.toml') in cfg.filepaths
    assert os.path.join(base_path, 'example2', 'config.toml') in cfg.filepaths
